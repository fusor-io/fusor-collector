#!/bin/bash

# Define the network prefix and subnet mask
network_prefix="192.168.1"
subnet_mask="255.255.255.0"
mac_address_file="network-scan-accumulated.txt"

# Read existing MAC addresses from the file into an associative array
declare -A mac_addresses
if [[ -f "$mac_address_file" ]]; then
    while IFS= read -r line; do
        if [[ -n $line ]]; then  # Check if line is non-empty
            mac_addresses[$line]=0
        fi
    done < "$mac_address_file"
fi

# Ping all IP addresses in parallel
for i in {1..254}; do
    ip="$network_prefix.$i"
    ping -c 1 -W 1 $ip > /dev/null 2>&1 &
done

# Wait for all pings to complete
wait

# Query the ARP table for MAC addresses
for i in {1..254}; do
    ip="$network_prefix.$i"
    mac=$(arp -n $ip | grep -o -E '([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}')
    if [[ -n $mac ]]; then
        mac_addresses[$mac]=1
    fi
done

# Prepare the new MAC address file content
new_content=""
for mac in "${!mac_addresses[@]}"; do
    new_content+="$mac"$'\n'
done

# Get the existing content from the file
existing_content=$(cat "$mac_address_file" 2>/dev/null || echo "")

# Compare the new content with the existing content
if [[ "$new_content" != "$existing_content" ]]; then
    # If different, update the file
    echo -e "$new_content" > "$mac_address_file"
fi

# Output the list of MAC addresses with active/inactive flag
for mac in "${!mac_addresses[@]}"; do
    echo "$mac,${mac_addresses[$mac]}"
done
